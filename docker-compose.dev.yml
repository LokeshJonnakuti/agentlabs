version: '3.8'

services:

  gateway:
    image: nginx:1.25.2-alpine
    hostname: gateway
    container_name: gateway-dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - ${PORT}:80
    depends_on:
      - frontend
      - console
      - server
    restart: unless-stopped

  postgres:
    image: postgres:16rc1-alpine3.18
    hostname: postgres
    container_name: postgres-dev
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${DEV_POSTGRES_PORT}:5432
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    restart: unless-stopped

  server:
    container_name: server-dev
    hostname: server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - ./server:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}
      - USERS_ACCESS_TOKEN_SECRET=${USERS_ACCESS_TOKEN_SECRET}
    ports:
      - ${DEV_SERVER_PORT}:3000
    restart: unless-stopped

  frontend:
    container_name: frontend-dev
    hostname: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
    ports:
      - ${DEV_FRONTEND_PORT}:3000
    depends_on:
      - server
    restart: unless-stopped

  console:
    container_name: console-dev
    hostname: console
    build:
      context: ./console
      dockerfile: Dockerfile.dev
    volumes:
      - ./console:/app
    ports:
      - ${DEV_CONSOLE_PORT}:3000
    depends_on:
      - server
    restart: unless-stopped

volumes:
  postgres-data-dev:
