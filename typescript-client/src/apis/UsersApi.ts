/* tslint:disable */
/* eslint-disable */
/**
 * AgentLabs API
 * Build AI Agents in minutes, not months.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RegisterUserDto,
  SanitizedUserResponse,
} from '../models/index';
import {
    RegisterUserDtoFromJSON,
    RegisterUserDtoToJSON,
    SanitizedUserResponseFromJSON,
    SanitizedUserResponseToJSON,
} from '../models/index';

export interface RegisterRequest {
    registerUserDto: RegisterUserDto;
}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI {

    /**
     */
    async registerRaw(requestParameters: RegisterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SanitizedUserResponse>> {
        if (requestParameters.registerUserDto === null || requestParameters.registerUserDto === undefined) {
            throw new runtime.RequiredError('registerUserDto','Required parameter requestParameters.registerUserDto was null or undefined when calling register.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/registerUser`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegisterUserDtoToJSON(requestParameters.registerUserDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SanitizedUserResponseFromJSON(jsonValue));
    }

    /**
     */
    async register(requestParameters: RegisterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SanitizedUserResponse> {
        const response = await this.registerRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
